# The FUSE section handles settings on the FUSE file system. FUSE provides a
# layer for intercepting SQLite transactions on the primary node so they can be
# shipped to replica nodes transparently.
fuse:
  # Required. This is the mount directory that applications will use to access
  # their SQLite databases.
  dir: "/litefs"

  # The debug flag enables debug logging of all FUSE API calls. This will
  # produce a lot of logging and should not be on for general use.
  debug: false

# The data section specifies where internal LiteFS data is stored and how long
# to retain the transaction files.
# 
# Transaction files are used to ship changes to replica nodes so they should
# persist long enough for replicas to retrieve them, even in the face of a short
# network interruption or a redeploy. Under high load, these files can grow
# large so it's not advised to extend retention too long.
data:
  # Path to where internal database and transaction files are stored.
  dir: "/var/lib/litefs"

  # The amount of time to keep LTX files. Latest LTX file is always kept.
  retention: "10m"

  # The frequency with which to check for LTX files to delete.
  retention-monitor-interval: "1m"

# The exec field specifies a command to run as a subprocess of LiteFS. This
# command will be executed after LiteFS either becomes primary or is connected
# to the primary node. LiteFS will forward signals to the subprocess and LiteFS
# will automatically shut itself down when the subprocess stops.
exec: "myapp -addr :8080"

# The candidate flag specifies whether the node can become the primary.
candidate: true

# The HTTP section defines settings for the LiteFS HTTP API server. This server
# is how replicas communicate with the current primary server.
http:
  # Specifies the bind address of the HTTP API server.
  addr: ":20202"

# A Consul server provides leader election and ensures that the responsibility
# of the primary node can be moved in the event of a deployment or a failure.
consul:
  # Required. The base URL of the Consul server.
  url: "http://localhost:8500"

  # Required. The URL that litefs is accessible on.
  advertise-url: "http://localhost:20202"

  # Sets the hostname that other nodes will use to reference this node.
  # Automatically assigned based on hostname(1) if not set.
  hostname: "localhost"

  # The key used for obtaining a lease by the primary.
  # This must be unique for each cluster of LiteFS servers
  key: "litefs/primary"

  # Length of time before a lease expires. The primary will automatically renew
  # the lease while it is alive, however, if it fails to renew in time then a
  # new primary may be elected after the TTL. This only occurs for unexpected
  # loss of the leader as normal operation will allow the leader to handoff the
  # lease to another replica without downtime.
  ttl: "10s"

  # Length of time after the lease expires before a candidate can become leader.
  # This buffer is intended to prevent overlap in leadership due to clock skew
  # or in-flight API calls.
  lock-delay: "5s"

# Static leadership can be used instead of Consul if only one node should ever
# be the primary. Only one node in the cluster can be marked as the "primary".
static:
  # Specifies that the current node is the primary.
  primary: true

  # Required. Hostname of the primary node.
  hostname: "localhost"

  # Required. The API URL of the primary node.
  advertise-url: "http://localhost:20202"

# The tracing section enables a rolling, on-disk tracing log. This records every
# operation to the database so it can be verbose and it can degrade performance.
# This is for debugging only and should not typically be enabled in production.
tracing:
  # Output path on disk.
  path: "/path/to/trace.log"

  # Maximum size of a single trace log before rolling. Specified in megabytes.
  max-size: 64

  # Maximum number of trace logs to retain.
  max-count: 10

  # If true, historical logs will be compressed using gzip.
  compress: true
